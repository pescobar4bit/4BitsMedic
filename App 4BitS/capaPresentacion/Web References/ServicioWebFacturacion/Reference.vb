'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.34209
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.34209.
'
Namespace ServicioWebFacturacion
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="Service1Soap", [Namespace]:="http://www.eforcon.com/WebService")>  _
    Partial Public Class Service1
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private mFacturaXMLOperationCompleted As System.Threading.SendOrPostCallback
        
        Private mNotaCreditoXmlOperationCompleted As System.Threading.SendOrPostCallback
        
        Private mNotaDebitoXmlOperationCompleted As System.Threading.SendOrPostCallback
        
        Private mFacturaCopiaXMLOperationCompleted As System.Threading.SendOrPostCallback
        
        Private mNotaCreditoCopiaXmlOperationCompleted As System.Threading.SendOrPostCallback
        
        Private mNotaDebitoCopiaXmlOperationCompleted As System.Threading.SendOrPostCallback
        
        Private mAnularFacturaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private mAnularNCOperationCompleted As System.Threading.SendOrPostCallback
        
        Private mAnularNDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private mObtieneInfoFacturasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private mObtieneInfoNCEOperationCompleted As System.Threading.SendOrPostCallback
        
        Private mObtieneInfoNDEOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.namespace4BITS.My.MySettings.Default.Distribuidora7_ServicioWebFacturacion_Service1
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event mFacturaXMLCompleted As mFacturaXMLCompletedEventHandler
        
        '''<remarks/>
        Public Event mNotaCreditoXmlCompleted As mNotaCreditoXmlCompletedEventHandler
        
        '''<remarks/>
        Public Event mNotaDebitoXmlCompleted As mNotaDebitoXmlCompletedEventHandler
        
        '''<remarks/>
        Public Event mFacturaCopiaXMLCompleted As mFacturaCopiaXMLCompletedEventHandler
        
        '''<remarks/>
        Public Event mNotaCreditoCopiaXmlCompleted As mNotaCreditoCopiaXmlCompletedEventHandler
        
        '''<remarks/>
        Public Event mNotaDebitoCopiaXmlCompleted As mNotaDebitoCopiaXmlCompletedEventHandler
        
        '''<remarks/>
        Public Event mAnularFacturaCompleted As mAnularFacturaCompletedEventHandler
        
        '''<remarks/>
        Public Event mAnularNCCompleted As mAnularNCCompletedEventHandler
        
        '''<remarks/>
        Public Event mAnularNDCompleted As mAnularNDCompletedEventHandler
        
        '''<remarks/>
        Public Event mObtieneInfoFacturasCompleted As mObtieneInfoFacturasCompletedEventHandler
        
        '''<remarks/>
        Public Event mObtieneInfoNCECompleted As mObtieneInfoNCECompletedEventHandler
        
        '''<remarks/>
        Public Event mObtieneInfoNDECompleted As mObtieneInfoNDECompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.eforcon.com/WebService/mFacturaXML", RequestNamespace:="http://www.eforcon.com/WebService", ResponseNamespace:="http://www.eforcon.com/WebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function mFacturaXML(ByVal user As String, ByVal clave As String, ByVal pXMLFactura As String) As SSO_clsResponseGeneral
            Dim results() As Object = Me.Invoke("mFacturaXML", New Object() {user, clave, pXMLFactura})
            Return CType(results(0),SSO_clsResponseGeneral)
        End Function
        
        '''<remarks/>
        Public Overloads Sub mFacturaXMLAsync(ByVal user As String, ByVal clave As String, ByVal pXMLFactura As String)
            Me.mFacturaXMLAsync(user, clave, pXMLFactura, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub mFacturaXMLAsync(ByVal user As String, ByVal clave As String, ByVal pXMLFactura As String, ByVal userState As Object)
            If (Me.mFacturaXMLOperationCompleted Is Nothing) Then
                Me.mFacturaXMLOperationCompleted = AddressOf Me.OnmFacturaXMLOperationCompleted
            End If
            Me.InvokeAsync("mFacturaXML", New Object() {user, clave, pXMLFactura}, Me.mFacturaXMLOperationCompleted, userState)
        End Sub
        
        Private Sub OnmFacturaXMLOperationCompleted(ByVal arg As Object)
            If (Not (Me.mFacturaXMLCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent mFacturaXMLCompleted(Me, New mFacturaXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.eforcon.com/WebService/mNotaCreditoXml", RequestNamespace:="http://www.eforcon.com/WebService", ResponseNamespace:="http://www.eforcon.com/WebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function mNotaCreditoXml(ByVal user As String, ByVal clave As String, ByVal pXMLCredito As String) As SSO_clsResponseGeneral
            Dim results() As Object = Me.Invoke("mNotaCreditoXml", New Object() {user, clave, pXMLCredito})
            Return CType(results(0),SSO_clsResponseGeneral)
        End Function
        
        '''<remarks/>
        Public Overloads Sub mNotaCreditoXmlAsync(ByVal user As String, ByVal clave As String, ByVal pXMLCredito As String)
            Me.mNotaCreditoXmlAsync(user, clave, pXMLCredito, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub mNotaCreditoXmlAsync(ByVal user As String, ByVal clave As String, ByVal pXMLCredito As String, ByVal userState As Object)
            If (Me.mNotaCreditoXmlOperationCompleted Is Nothing) Then
                Me.mNotaCreditoXmlOperationCompleted = AddressOf Me.OnmNotaCreditoXmlOperationCompleted
            End If
            Me.InvokeAsync("mNotaCreditoXml", New Object() {user, clave, pXMLCredito}, Me.mNotaCreditoXmlOperationCompleted, userState)
        End Sub
        
        Private Sub OnmNotaCreditoXmlOperationCompleted(ByVal arg As Object)
            If (Not (Me.mNotaCreditoXmlCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent mNotaCreditoXmlCompleted(Me, New mNotaCreditoXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.eforcon.com/WebService/mNotaDebitoXml", RequestNamespace:="http://www.eforcon.com/WebService", ResponseNamespace:="http://www.eforcon.com/WebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function mNotaDebitoXml(ByVal user As String, ByVal clave As String, ByVal pXMLDebito As String) As SSO_clsResponseGeneral
            Dim results() As Object = Me.Invoke("mNotaDebitoXml", New Object() {user, clave, pXMLDebito})
            Return CType(results(0),SSO_clsResponseGeneral)
        End Function
        
        '''<remarks/>
        Public Overloads Sub mNotaDebitoXmlAsync(ByVal user As String, ByVal clave As String, ByVal pXMLDebito As String)
            Me.mNotaDebitoXmlAsync(user, clave, pXMLDebito, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub mNotaDebitoXmlAsync(ByVal user As String, ByVal clave As String, ByVal pXMLDebito As String, ByVal userState As Object)
            If (Me.mNotaDebitoXmlOperationCompleted Is Nothing) Then
                Me.mNotaDebitoXmlOperationCompleted = AddressOf Me.OnmNotaDebitoXmlOperationCompleted
            End If
            Me.InvokeAsync("mNotaDebitoXml", New Object() {user, clave, pXMLDebito}, Me.mNotaDebitoXmlOperationCompleted, userState)
        End Sub
        
        Private Sub OnmNotaDebitoXmlOperationCompleted(ByVal arg As Object)
            If (Not (Me.mNotaDebitoXmlCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent mNotaDebitoXmlCompleted(Me, New mNotaDebitoXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.eforcon.com/WebService/mFacturaCopiaXML", RequestNamespace:="http://www.eforcon.com/WebService", ResponseNamespace:="http://www.eforcon.com/WebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function mFacturaCopiaXML(ByVal user As String, ByVal clave As String, ByVal pXMLFactura As String) As SSO_clsResponseGeneral
            Dim results() As Object = Me.Invoke("mFacturaCopiaXML", New Object() {user, clave, pXMLFactura})
            Return CType(results(0),SSO_clsResponseGeneral)
        End Function
        
        '''<remarks/>
        Public Overloads Sub mFacturaCopiaXMLAsync(ByVal user As String, ByVal clave As String, ByVal pXMLFactura As String)
            Me.mFacturaCopiaXMLAsync(user, clave, pXMLFactura, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub mFacturaCopiaXMLAsync(ByVal user As String, ByVal clave As String, ByVal pXMLFactura As String, ByVal userState As Object)
            If (Me.mFacturaCopiaXMLOperationCompleted Is Nothing) Then
                Me.mFacturaCopiaXMLOperationCompleted = AddressOf Me.OnmFacturaCopiaXMLOperationCompleted
            End If
            Me.InvokeAsync("mFacturaCopiaXML", New Object() {user, clave, pXMLFactura}, Me.mFacturaCopiaXMLOperationCompleted, userState)
        End Sub
        
        Private Sub OnmFacturaCopiaXMLOperationCompleted(ByVal arg As Object)
            If (Not (Me.mFacturaCopiaXMLCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent mFacturaCopiaXMLCompleted(Me, New mFacturaCopiaXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.eforcon.com/WebService/mNotaCreditoCopiaXml", RequestNamespace:="http://www.eforcon.com/WebService", ResponseNamespace:="http://www.eforcon.com/WebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function mNotaCreditoCopiaXml(ByVal user As String, ByVal clave As String, ByVal pXMLCredito As String) As SSO_clsResponseGeneral
            Dim results() As Object = Me.Invoke("mNotaCreditoCopiaXml", New Object() {user, clave, pXMLCredito})
            Return CType(results(0),SSO_clsResponseGeneral)
        End Function
        
        '''<remarks/>
        Public Overloads Sub mNotaCreditoCopiaXmlAsync(ByVal user As String, ByVal clave As String, ByVal pXMLCredito As String)
            Me.mNotaCreditoCopiaXmlAsync(user, clave, pXMLCredito, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub mNotaCreditoCopiaXmlAsync(ByVal user As String, ByVal clave As String, ByVal pXMLCredito As String, ByVal userState As Object)
            If (Me.mNotaCreditoCopiaXmlOperationCompleted Is Nothing) Then
                Me.mNotaCreditoCopiaXmlOperationCompleted = AddressOf Me.OnmNotaCreditoCopiaXmlOperationCompleted
            End If
            Me.InvokeAsync("mNotaCreditoCopiaXml", New Object() {user, clave, pXMLCredito}, Me.mNotaCreditoCopiaXmlOperationCompleted, userState)
        End Sub
        
        Private Sub OnmNotaCreditoCopiaXmlOperationCompleted(ByVal arg As Object)
            If (Not (Me.mNotaCreditoCopiaXmlCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent mNotaCreditoCopiaXmlCompleted(Me, New mNotaCreditoCopiaXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.eforcon.com/WebService/mNotaDebitoCopiaXml", RequestNamespace:="http://www.eforcon.com/WebService", ResponseNamespace:="http://www.eforcon.com/WebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function mNotaDebitoCopiaXml(ByVal user As String, ByVal clave As String, ByVal pXMLDebito As String) As SSO_clsResponseGeneral
            Dim results() As Object = Me.Invoke("mNotaDebitoCopiaXml", New Object() {user, clave, pXMLDebito})
            Return CType(results(0),SSO_clsResponseGeneral)
        End Function
        
        '''<remarks/>
        Public Overloads Sub mNotaDebitoCopiaXmlAsync(ByVal user As String, ByVal clave As String, ByVal pXMLDebito As String)
            Me.mNotaDebitoCopiaXmlAsync(user, clave, pXMLDebito, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub mNotaDebitoCopiaXmlAsync(ByVal user As String, ByVal clave As String, ByVal pXMLDebito As String, ByVal userState As Object)
            If (Me.mNotaDebitoCopiaXmlOperationCompleted Is Nothing) Then
                Me.mNotaDebitoCopiaXmlOperationCompleted = AddressOf Me.OnmNotaDebitoCopiaXmlOperationCompleted
            End If
            Me.InvokeAsync("mNotaDebitoCopiaXml", New Object() {user, clave, pXMLDebito}, Me.mNotaDebitoCopiaXmlOperationCompleted, userState)
        End Sub
        
        Private Sub OnmNotaDebitoCopiaXmlOperationCompleted(ByVal arg As Object)
            If (Not (Me.mNotaDebitoCopiaXmlCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent mNotaDebitoCopiaXmlCompleted(Me, New mNotaDebitoCopiaXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.eforcon.com/WebService/mAnularFactura", RequestNamespace:="http://www.eforcon.com/WebService", ResponseNamespace:="http://www.eforcon.com/WebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function mAnularFactura(ByVal user As String, ByVal clave As String, ByVal resolucion As String, ByVal serie As String, ByVal noFactura As Integer, ByVal anio As Integer, ByVal razon As String) As SSO_clsResponseGeneral
            Dim results() As Object = Me.Invoke("mAnularFactura", New Object() {user, clave, resolucion, serie, noFactura, anio, razon})
            Return CType(results(0),SSO_clsResponseGeneral)
        End Function
        
        '''<remarks/>
        Public Overloads Sub mAnularFacturaAsync(ByVal user As String, ByVal clave As String, ByVal resolucion As String, ByVal serie As String, ByVal noFactura As Integer, ByVal anio As Integer, ByVal razon As String)
            Me.mAnularFacturaAsync(user, clave, resolucion, serie, noFactura, anio, razon, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub mAnularFacturaAsync(ByVal user As String, ByVal clave As String, ByVal resolucion As String, ByVal serie As String, ByVal noFactura As Integer, ByVal anio As Integer, ByVal razon As String, ByVal userState As Object)
            If (Me.mAnularFacturaOperationCompleted Is Nothing) Then
                Me.mAnularFacturaOperationCompleted = AddressOf Me.OnmAnularFacturaOperationCompleted
            End If
            Me.InvokeAsync("mAnularFactura", New Object() {user, clave, resolucion, serie, noFactura, anio, razon}, Me.mAnularFacturaOperationCompleted, userState)
        End Sub
        
        Private Sub OnmAnularFacturaOperationCompleted(ByVal arg As Object)
            If (Not (Me.mAnularFacturaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent mAnularFacturaCompleted(Me, New mAnularFacturaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.eforcon.com/WebService/mAnularNC", RequestNamespace:="http://www.eforcon.com/WebService", ResponseNamespace:="http://www.eforcon.com/WebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function mAnularNC(ByVal user As String, ByVal clave As String, ByVal resolucion As String, ByVal serie As String, ByVal noNC As Integer, ByVal anio As Integer, ByVal razon As String) As SSO_clsResponseGeneral
            Dim results() As Object = Me.Invoke("mAnularNC", New Object() {user, clave, resolucion, serie, noNC, anio, razon})
            Return CType(results(0),SSO_clsResponseGeneral)
        End Function
        
        '''<remarks/>
        Public Overloads Sub mAnularNCAsync(ByVal user As String, ByVal clave As String, ByVal resolucion As String, ByVal serie As String, ByVal noNC As Integer, ByVal anio As Integer, ByVal razon As String)
            Me.mAnularNCAsync(user, clave, resolucion, serie, noNC, anio, razon, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub mAnularNCAsync(ByVal user As String, ByVal clave As String, ByVal resolucion As String, ByVal serie As String, ByVal noNC As Integer, ByVal anio As Integer, ByVal razon As String, ByVal userState As Object)
            If (Me.mAnularNCOperationCompleted Is Nothing) Then
                Me.mAnularNCOperationCompleted = AddressOf Me.OnmAnularNCOperationCompleted
            End If
            Me.InvokeAsync("mAnularNC", New Object() {user, clave, resolucion, serie, noNC, anio, razon}, Me.mAnularNCOperationCompleted, userState)
        End Sub
        
        Private Sub OnmAnularNCOperationCompleted(ByVal arg As Object)
            If (Not (Me.mAnularNCCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent mAnularNCCompleted(Me, New mAnularNCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.eforcon.com/WebService/mAnularND", RequestNamespace:="http://www.eforcon.com/WebService", ResponseNamespace:="http://www.eforcon.com/WebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function mAnularND(ByVal user As String, ByVal clave As String, ByVal resolucion As String, ByVal serie As String, ByVal noND As Integer, ByVal anio As Integer, ByVal razon As String) As SSO_clsResponseGeneral
            Dim results() As Object = Me.Invoke("mAnularND", New Object() {user, clave, resolucion, serie, noND, anio, razon})
            Return CType(results(0),SSO_clsResponseGeneral)
        End Function
        
        '''<remarks/>
        Public Overloads Sub mAnularNDAsync(ByVal user As String, ByVal clave As String, ByVal resolucion As String, ByVal serie As String, ByVal noND As Integer, ByVal anio As Integer, ByVal razon As String)
            Me.mAnularNDAsync(user, clave, resolucion, serie, noND, anio, razon, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub mAnularNDAsync(ByVal user As String, ByVal clave As String, ByVal resolucion As String, ByVal serie As String, ByVal noND As Integer, ByVal anio As Integer, ByVal razon As String, ByVal userState As Object)
            If (Me.mAnularNDOperationCompleted Is Nothing) Then
                Me.mAnularNDOperationCompleted = AddressOf Me.OnmAnularNDOperationCompleted
            End If
            Me.InvokeAsync("mAnularND", New Object() {user, clave, resolucion, serie, noND, anio, razon}, Me.mAnularNDOperationCompleted, userState)
        End Sub
        
        Private Sub OnmAnularNDOperationCompleted(ByVal arg As Object)
            If (Not (Me.mAnularNDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent mAnularNDCompleted(Me, New mAnularNDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.eforcon.com/WebService/mObtieneInfoFacturas", RequestNamespace:="http://www.eforcon.com/WebService", ResponseNamespace:="http://www.eforcon.com/WebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function mObtieneInfoFacturas(ByVal user As String, ByVal clave As String, ByVal resolucion As String, ByVal serie As String, ByVal noFact As Integer, ByVal anio As Integer) As SSO_clsResponseGeneral
            Dim results() As Object = Me.Invoke("mObtieneInfoFacturas", New Object() {user, clave, resolucion, serie, noFact, anio})
            Return CType(results(0),SSO_clsResponseGeneral)
        End Function
        
        '''<remarks/>
        Public Overloads Sub mObtieneInfoFacturasAsync(ByVal user As String, ByVal clave As String, ByVal resolucion As String, ByVal serie As String, ByVal noFact As Integer, ByVal anio As Integer)
            Me.mObtieneInfoFacturasAsync(user, clave, resolucion, serie, noFact, anio, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub mObtieneInfoFacturasAsync(ByVal user As String, ByVal clave As String, ByVal resolucion As String, ByVal serie As String, ByVal noFact As Integer, ByVal anio As Integer, ByVal userState As Object)
            If (Me.mObtieneInfoFacturasOperationCompleted Is Nothing) Then
                Me.mObtieneInfoFacturasOperationCompleted = AddressOf Me.OnmObtieneInfoFacturasOperationCompleted
            End If
            Me.InvokeAsync("mObtieneInfoFacturas", New Object() {user, clave, resolucion, serie, noFact, anio}, Me.mObtieneInfoFacturasOperationCompleted, userState)
        End Sub
        
        Private Sub OnmObtieneInfoFacturasOperationCompleted(ByVal arg As Object)
            If (Not (Me.mObtieneInfoFacturasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent mObtieneInfoFacturasCompleted(Me, New mObtieneInfoFacturasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.eforcon.com/WebService/mObtieneInfoNCE", RequestNamespace:="http://www.eforcon.com/WebService", ResponseNamespace:="http://www.eforcon.com/WebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function mObtieneInfoNCE(ByVal user As String, ByVal clave As String, ByVal resolucion As String, ByVal serie As String, ByVal noNC As Integer, ByVal anio As Integer) As SSO_clsResponseGeneral
            Dim results() As Object = Me.Invoke("mObtieneInfoNCE", New Object() {user, clave, resolucion, serie, noNC, anio})
            Return CType(results(0),SSO_clsResponseGeneral)
        End Function
        
        '''<remarks/>
        Public Overloads Sub mObtieneInfoNCEAsync(ByVal user As String, ByVal clave As String, ByVal resolucion As String, ByVal serie As String, ByVal noNC As Integer, ByVal anio As Integer)
            Me.mObtieneInfoNCEAsync(user, clave, resolucion, serie, noNC, anio, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub mObtieneInfoNCEAsync(ByVal user As String, ByVal clave As String, ByVal resolucion As String, ByVal serie As String, ByVal noNC As Integer, ByVal anio As Integer, ByVal userState As Object)
            If (Me.mObtieneInfoNCEOperationCompleted Is Nothing) Then
                Me.mObtieneInfoNCEOperationCompleted = AddressOf Me.OnmObtieneInfoNCEOperationCompleted
            End If
            Me.InvokeAsync("mObtieneInfoNCE", New Object() {user, clave, resolucion, serie, noNC, anio}, Me.mObtieneInfoNCEOperationCompleted, userState)
        End Sub
        
        Private Sub OnmObtieneInfoNCEOperationCompleted(ByVal arg As Object)
            If (Not (Me.mObtieneInfoNCECompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent mObtieneInfoNCECompleted(Me, New mObtieneInfoNCECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.eforcon.com/WebService/mObtieneInfoNDE", RequestNamespace:="http://www.eforcon.com/WebService", ResponseNamespace:="http://www.eforcon.com/WebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function mObtieneInfoNDE(ByVal user As String, ByVal clave As String, ByVal resolucion As String, ByVal serie As String, ByVal noND As Integer, ByVal anio As Integer) As SSO_clsResponseGeneral
            Dim results() As Object = Me.Invoke("mObtieneInfoNDE", New Object() {user, clave, resolucion, serie, noND, anio})
            Return CType(results(0),SSO_clsResponseGeneral)
        End Function
        
        '''<remarks/>
        Public Overloads Sub mObtieneInfoNDEAsync(ByVal user As String, ByVal clave As String, ByVal resolucion As String, ByVal serie As String, ByVal noND As Integer, ByVal anio As Integer)
            Me.mObtieneInfoNDEAsync(user, clave, resolucion, serie, noND, anio, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub mObtieneInfoNDEAsync(ByVal user As String, ByVal clave As String, ByVal resolucion As String, ByVal serie As String, ByVal noND As Integer, ByVal anio As Integer, ByVal userState As Object)
            If (Me.mObtieneInfoNDEOperationCompleted Is Nothing) Then
                Me.mObtieneInfoNDEOperationCompleted = AddressOf Me.OnmObtieneInfoNDEOperationCompleted
            End If
            Me.InvokeAsync("mObtieneInfoNDE", New Object() {user, clave, resolucion, serie, noND, anio}, Me.mObtieneInfoNDEOperationCompleted, userState)
        End Sub
        
        Private Sub OnmObtieneInfoNDEOperationCompleted(ByVal arg As Object)
            If (Not (Me.mObtieneInfoNDECompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent mObtieneInfoNDECompleted(Me, New mObtieneInfoNDECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<comentarios/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.eforcon.com/WebService")>  _
    Partial Public Class SSO_clsResponseGeneral
        
        Private pResultadoField As Boolean
        
        Private pDescripcionField As String
        
        Private pCAEField As String
        
        Private pIdSatField As String
        
        Private pCAECField As String
        
        '''<comentarios/>
        Public Property pResultado() As Boolean
            Get
                Return Me.pResultadoField
            End Get
            Set
                Me.pResultadoField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property pDescripcion() As String
            Get
                Return Me.pDescripcionField
            End Get
            Set
                Me.pDescripcionField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property pCAE() As String
            Get
                Return Me.pCAEField
            End Get
            Set
                Me.pCAEField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property pIdSat() As String
            Get
                Return Me.pIdSatField
            End Get
            Set
                Me.pIdSatField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property pCAEC() As String
            Get
                Return Me.pCAECField
            End Get
            Set
                Me.pCAECField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub mFacturaXMLCompletedEventHandler(ByVal sender As Object, ByVal e As mFacturaXMLCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class mFacturaXMLCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SSO_clsResponseGeneral
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SSO_clsResponseGeneral)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub mNotaCreditoXmlCompletedEventHandler(ByVal sender As Object, ByVal e As mNotaCreditoXmlCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class mNotaCreditoXmlCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SSO_clsResponseGeneral
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SSO_clsResponseGeneral)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub mNotaDebitoXmlCompletedEventHandler(ByVal sender As Object, ByVal e As mNotaDebitoXmlCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class mNotaDebitoXmlCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SSO_clsResponseGeneral
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SSO_clsResponseGeneral)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub mFacturaCopiaXMLCompletedEventHandler(ByVal sender As Object, ByVal e As mFacturaCopiaXMLCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class mFacturaCopiaXMLCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SSO_clsResponseGeneral
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SSO_clsResponseGeneral)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub mNotaCreditoCopiaXmlCompletedEventHandler(ByVal sender As Object, ByVal e As mNotaCreditoCopiaXmlCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class mNotaCreditoCopiaXmlCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SSO_clsResponseGeneral
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SSO_clsResponseGeneral)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub mNotaDebitoCopiaXmlCompletedEventHandler(ByVal sender As Object, ByVal e As mNotaDebitoCopiaXmlCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class mNotaDebitoCopiaXmlCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SSO_clsResponseGeneral
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SSO_clsResponseGeneral)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub mAnularFacturaCompletedEventHandler(ByVal sender As Object, ByVal e As mAnularFacturaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class mAnularFacturaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SSO_clsResponseGeneral
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SSO_clsResponseGeneral)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub mAnularNCCompletedEventHandler(ByVal sender As Object, ByVal e As mAnularNCCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class mAnularNCCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SSO_clsResponseGeneral
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SSO_clsResponseGeneral)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub mAnularNDCompletedEventHandler(ByVal sender As Object, ByVal e As mAnularNDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class mAnularNDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SSO_clsResponseGeneral
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SSO_clsResponseGeneral)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub mObtieneInfoFacturasCompletedEventHandler(ByVal sender As Object, ByVal e As mObtieneInfoFacturasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class mObtieneInfoFacturasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SSO_clsResponseGeneral
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SSO_clsResponseGeneral)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub mObtieneInfoNCECompletedEventHandler(ByVal sender As Object, ByVal e As mObtieneInfoNCECompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class mObtieneInfoNCECompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SSO_clsResponseGeneral
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SSO_clsResponseGeneral)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub mObtieneInfoNDECompletedEventHandler(ByVal sender As Object, ByVal e As mObtieneInfoNDECompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class mObtieneInfoNDECompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SSO_clsResponseGeneral
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SSO_clsResponseGeneral)
            End Get
        End Property
    End Class
End Namespace
